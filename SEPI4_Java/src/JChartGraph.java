import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import java.io.File;
import java.io.IOException;

import javax.swing.JFrame;
import javax.swing.JPanel;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.util.ShapeUtilities;

@SuppressWarnings("serial")
public class JChartGraph extends JFrame {

	public JChartGraph(double[][] trackData, int[] raceData) {
		super("ScalexTric Gyroscope Readings");
		
		JPanel chartPanel = createChartPanel(trackData,raceData);
		add(chartPanel, BorderLayout.CENTER);
		
		setSize(800, 400);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLocationRelativeTo(null);
	}
	
	private JPanel createChartPanel(double[][] trackData, int[] raceData) {
		String chartTitle = "Gyroscope Z-Axis readings";
		String xAxisLabel = "Tacho count";
		String yAxisLabel = "°/sec";
		
		XYDataset dataset = createDataset(trackData);
		
		JFreeChart chart = ChartFactory.createXYLineChart(chartTitle, 
				xAxisLabel, yAxisLabel, dataset);
		
		customizeChart(chart, raceData);
		
		// saves the chart as an image files
		File imageFile = new File("GyroZWithPlan.png");
		int width = 1200;
		int height = 600;
		
		try {
			ChartUtilities.saveChartAsPNG(imageFile, chart, width, height);
		} catch (IOException ex) {
			System.err.println(ex);
		}
		
		return new ChartPanel(chart);
	}

	private XYDataset createDataset(double[][] trackData) {
		XYSeriesCollection dataset = new XYSeriesCollection();
		XYSeries series1 = new XYSeries("Gyro Z-axis");
		//double[] gyroZ = {0.41221374, 3.832061069, 7.312977099, 9.58778626, 12.73282443, 1.328244275, 20.16793893, -3.358778626, 13.48091603, -4.305343511, 2.870229008, 12.91603053, 2.213740458, -13.49618321, -4.442748092, 13.8778626, 10.88549618, 1.175572519, 1.938931298, -28.77862595, -152.5038168, -235.8015267, -273.7251908, -227.4198473, -233.9847328, -227.0381679, -210.7328244, -187.9847328, -219.0076336, -223.1145038, -216.0152672, -211.8931298, -223.4198473, -209.3435115, -193.8320611, -137.740458, 8.717557252, 91.81679389, 143.221374, 181.129771, 187.1908397, 200.5648855, 193.4503817, 225.1908397, 208.9312977, 186.1832061, 180.5496183, 198.2748092, 195.8167939, 198.5954198, 186.870229, 208.9770992, 202.3053435, 206.9618321, 121.3129771, -80.29007634, -180.5038168, -255.7709924, -285.2366412, -240.7022901, -223.1145038, -199.2061069, -220.9007634, -231.0687023, -221.4198473, -227.2671756, -228.2442748, -229.6335878, -197.3129771, -206.0305344, -52.04580153, 64.96183206, 112.3664122, 153.3740458, 180.5038168, 48.97709924, -111.5725191, -207.648855, -218.9770992, -44.30534351, 72.70229008, 131.0076336, 167.4351145, 178.5801527, -20.38167939, -126.7938931, -178, -206.7328244, -95.8778626, -52.7480916, -16.58015267, -6.366412214, -11.49618321, 0.671755725, 3.511450382, -8.671755725, -10.61068702, -4.732824427, -0.702290076, -8.885496183, -9.847328244, 0.625954198, 2.977099237, 8.839694656, 6.091603053, 7.358778626, 12.65648855, 13.96946565, -1.740458015, -11.4351145, -7.694656489, -9.633587786, -3.465648855, 9.06870229, 4.870229008, -5.145038168, -10.32061069, 9.832061069, -8.610687023, -8.41221374, 6.763358779, -11.49618321, 4.13740458, -1.267175573, 18.64122137, -11.49618321, 16.70229008, -3.389312977, 13.3740458, -1.450381679, -7.526717557, -6.320610687, 7.526717557, -1.755725191, -274.6412214, -452.7480916, -460.5343511, -311.5267176, -217.2519084, -301.5419847, -326.2290076, -276.610687, -275.3282443, -277.9847328, -251.1755725, -153.2061069, -63.90839695, -27.81679389, -16.54961832, -6.045801527, -6.732824427, -10.01526718, -1.129770992, -2.458015267, 2.885496183, 6.290076336, 9.969465649, 2.748091603, -7.312977099, -13.4351145, -5.526717557, 165.2824427, 241.5114504, 263.5572519, 253.648855, 246.9465649, 265.8167939, 253.4351145, 246.6564885, 230.5343511, 230.0610687, 226.259542, 213.8015267, 194.1068702, 206.3358779, 225.2366412, -44.41221374, -194.2900763, -267.1908397, -293.9694656, -256.6717557, -243.3435115, -210.6259542, -242.7022901, -235.129771, -232.9923664, -239.5572519, -246.7480916, -236.4580153, -223.0534351, -122.3206107, -63.63358779, -31.51145038, -15.17557252, -24.77862595, -21.86259542, -15.80152672, 2.519083969, 6.229007634, 4.091603053, -0.152671756, -10.03053435, -6.503816794, -5.06870229, 6.213740458, 6.366412214, 7.541984733, -6.13740458, -13.35877863, -0.885496183, 16.6870229, -199.7709924, -336.1679389, -352.2137405, -289.3435115, -254.351145, -230.4274809, -73.41984733, -29.03816794, -20.07633588, -8.824427481, 10.61068702, 4.488549618, 24.45801527, 12.22900763, 6.992366412, 2.305343511, -18.25954198, 0.564885496, 10.65648855, 2.900763359, -9.847328244, -1.755725191, 16.50381679, -4.885496183, -20.09160305, 11.32824427, 3.267175573, -11.14503817, 43.70992366, 240.4122137, 298.1679389, 260.1526718, 260.6870229, 250.3664122, 241.4045802, 162.5496183, 37.26717557, 24.27480916, -1.099236641, -20.67175573, -14, 124.8091603, 214.5954198, 241.0534351, 231.221374, 241.4503817, 246.870229, 219.3282443, 215.1755725, 77.52671756, 44.04580153, 41.34351145, 10.91603053, 20.1221374, 4.091603053, -10.19847328, -9.389312977, 1.938931298, 9.114503817, 6.717557252, -16.5648855, -5.633587786, 18.39694656, 264.4732824, 332.8091603, 274.5801527, 291.5267176, 255.4045802, 232.4580153, -142.3358779, -309.1450382, -375.1908397, -330.4122137, -246.8854962, -139.4503817, 49.22137405, 144.0916031, 193.2824427, 190.0458015, -84.16793893, -181.8473282, -259.9694656, -281.9847328, -233.4961832, -218.870229, -242.0610687, -221.6946565, -213.9083969, -210.0305344, -207.5419847, -107.9083969, -49.3129771, -21.40458015, -3.740458015, 0.366412214, -7.358778626, -18.87022901, -12.6259542, -18.6870229, -17.78625954, -0.534351145, -14.90076336, 5.358778626, 10.79389313, 18.97709924, -2.198473282, -156.5954198, -270.5954198, -364.7022901, -288.1679389, -244.1984733, -280.4427481, -241.2824427, -271.4656489, -249.1908397, -256.1679389, -240.7022901, -238.4580153, -235.2671756, -193.9389313, 2.473282443, 83.83206107, 152.778626, 184.4122137, 185.1755725, 205.3587786, 189.6183206, 209.5877863, 205.5267176, 193.8473282, 202.519084, 203.0687023, 210.1068702, 204.5343511, 210.7633588, 206.610687, 194.4427481, 219.7862595, -33.3740458};
		//int[] tachoArr = {0, 0, 0, 1, 2, 4, 5, 7, 10, 12, 15, 17, 20, 24, 27, 30, 34, 37, 41, 45, 48, 52, 56, 59, 63, 66, 69, 72, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 107, 110, 114, 117, 121, 124, 128, 131, 135, 139, 142, 146, 150, 153, 157, 161, 164, 168, 172, 175, 179, 183, 186, 189, 193, 196, 199, 203, 206, 209, 212, 215, 218, 221, 225, 228, 231, 234, 238, 241, 244, 248, 251, 254, 258, 261, 264, 268, 271, 274, 277, 280, 283, 285, 288, 291, 294, 296, 299, 302, 305, 308, 311, 315, 319, 322, 326, 330, 334, 339, 343, 347, 352, 356, 361, 366, 371, 375, 381, 386, 391, 397, 403, 409, 414, 421, 427, 433, 439, 445, 451, 457, 463, 469, 475, 481, 487, 493, 498, 504, 508, 513, 517, 522, 526, 530, 534, 537, 541, 545, 548, 552, 556, 560, 564, 569, 573, 577, 582, 586, 591, 596, 601, 605, 610, 615, 620, 624, 629, 633, 638, 642, 646, 651, 655, 659, 663, 667, 671, 675, 679, 683, 687, 691, 694, 698, 701, 705, 708, 712, 715, 719, 722, 725, 729, 732, 735, 739, 743, 747, 751, 755, 759, 763, 768, 772, 777, 781, 786, 791, 796, 801, 805, 810, 815, 820, 825, 829, 833, 837, 841, 845, 849, 853, 857, 862, 866, 870, 875, 880, 885, 890, 894, 900, 905, 910, 915, 920, 926, 931, 936, 942, 947, 952, 957, 962, 967, 971, 975, 979, 983, 987, 991, 995, 1000, 1004, 1008, 1013, 1017, 1021, 1025, 1030, 1034, 1038, 1042, 1046, 1050, 1055, 1059, 1064, 1069, 1074, 1079, 1084, 1089, 1095, 1101, 1106, 1112, 1117, 1122, 1127, 1132, 1137, 1141, 1146, 1150, 1154, 1158, 1162, 1166, 1170, 1173, 1177, 1181, 1185, 1189, 1192, 1196, 1199, 1202, 1205, 1208, 1212, 1215, 1218, 1221, 1225, 1228, 1232, 1236, 1240, 1244, 1248, 1253, 1257, 1262, 1266, 1271, 1276, 1280, 1285, 1290, 1294, 1298, 1301, 1305, 1309, 1313, 1316, 1320, 1323, 1326, 1330, 1333, 1337, 1340, 1344, 1347, 1351, 1355, 1359, 1362, 1366, 1370, 1374, 1378, 1381, 1385, 1389, 1393, 1397};
		double[] cumulTacho = new double[trackData.length];
		cumulTacho[0] = 0;
		for (int j = 1; j < trackData.length; j++) {
			cumulTacho[j] = cumulTacho[j-1] + trackData[j][2];
		}
		for (int i = 0; i < trackData.length; i++) {
			series1.add(cumulTacho[i],trackData[i][1]);
		}		
		
		dataset.addSeries(series1);

		return dataset;
	}
	
	private void customizeChart(JFreeChart chart, int[] raceData) {
		XYPlot plot = chart.getXYPlot();
		XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();

		// sets paint color for each series
		renderer.setSeriesPaint(0, Color.CYAN);
		
		//int[] raceData = {0, 85, 0, 85, 0, 85, 1, 85, 2, 85, 4, 85, 5, 85, 7, 85, 10, 85, 12, 85, 15, 85, 17, 85, 20, 85, 24, 85, 27, 85, 30, 85, 34, 85, 37, 85, 41, 200, 45, 200, 48, 200, 52, 200, 56, 200, 59, 200, 63, 200, 66, 200, 69, 200, 72, 200, 76, 65, 79, 65, 82, 65, 85, 65, 88, 65, 91, 65, 94, 65, 97, 65, 100, 85, 103, 85, 107, 65, 110, 65, 114, 65, 117, 65, 121, 65, 124, 65, 128, 65, 131, 65, 135, 65, 139, 65, 142, 65, 146, 65, 150, 65, 153, 65, 157, 65, 161, 65, 164, 65, 168, 85, 172, 65, 175, 65, 179, 65, 183, 65, 186, 65, 189, 65, 193, 65, 196, 65, 199, 65, 203, 65, 206, 65, 209, 65, 212, 65, 215, 65, 218, 85, 221, 85, 225, 65, 228, 65, 231, 65, 234, 85, 238, 65, 241, 65, 244, 65, 248, 85, 251, 85, 254, 65, 258, 65, 261, 65, 264, 85, 268, 65, 271, 65, 274, 65, 277, 85, 280, 85, 283, 85, 285, 85, 288, 85, 291, 85, 294, 85, 296, 85, 299, 85, 302, 85, 305, 85, 308, 85, 311, 85, 315, 85, 319, 85, 322, 85, 326, 85, 330, 85, 334, 85, 339, 85, 343, 85, 347, 85, 352, 85, 356, 85, 361, 85, 366, 85, 371, 85, 375, 85, 381, 85, 386, 85, 391, 85, 397, 85, 403, 85, 409, 85, 414, 85, 421, 85, 427, 85, 433, 85, 439, 85, 445, 200, 451, 200, 457, 200, 463, 200, 469, 200, 475, 200, 481, 200, 487, 200, 493, 200, 498, 200, 504, 200, 508, 200, 513, 200, 517, 65, 522, 65, 526, 65, 530, 65, 534, 65, 537, 65, 541, 85, 545, 85, 548, 85, 552, 85, 556, 85, 560, 85, 564, 85, 569, 85, 573, 85, 577, 85, 582, 85, 586, 85, 591, 200, 596, 200, 601, 200, 605, 200, 610, 200, 615, 200, 620, 200, 624, 200, 629, 200, 633, 200, 638, 65, 642, 65, 646, 65, 651, 65, 655, 65, 659, 65, 663, 65, 667, 65, 671, 85, 675, 65, 679, 65, 683, 65, 687, 65, 691, 65, 694, 65, 698, 65, 701, 65, 705, 65, 708, 65, 712, 65, 715, 65, 719, 65, 722, 65, 725, 85, 729, 85, 732, 85, 735, 85, 739, 85, 743, 85, 747, 85, 751, 85, 755, 85, 759, 85, 763, 85, 768, 85, 772, 85, 777, 200, 781, 200, 786, 200, 791, 200, 796, 200, 801, 200, 805, 200, 810, 200, 815, 200, 820, 200, 825, 65, 829, 65, 833, 65, 837, 85, 841, 85, 845, 85, 849, 85, 853, 85, 857, 85, 862, 85, 866, 85, 870, 85, 875, 85, 880, 85, 885, 85, 890, 85, 894, 85, 900, 85, 905, 200, 910, 200, 915, 200, 920, 200, 926, 200, 931, 200, 936, 200, 942, 200, 947, 200, 952, 200, 957, 200, 962, 65, 967, 65, 971, 65, 975, 65, 979, 85, 983, 85, 987, 85, 991, 200, 995, 200, 1000, 200, 1004, 200, 1008, 200, 1013, 200, 1017, 65, 1021, 65, 1025, 65, 1030, 65, 1034, 85, 1038, 85, 1042, 85, 1046, 85, 1050, 85, 1055, 85, 1059, 85, 1064, 85, 1069, 85, 1074, 85, 1079, 85, 1084, 200, 1089, 200, 1095, 200, 1101, 200, 1106, 200, 1112, 200, 1117, 200, 1122, 200, 1127, 200, 1132, 65, 1137, 65, 1141, 65, 1146, 65, 1150, 65, 1154, 65, 1158, 85, 1162, 65, 1166, 65, 1170, 65, 1173, 85, 1177, 65, 1181, 65, 1185, 65, 1189, 65, 1192, 65, 1196, 65, 1199, 65, 1202, 65, 1205, 65, 1208, 65, 1212, 65, 1215, 85, 1218, 85, 1221, 85, 1225, 85, 1228, 85, 1232, 85, 1236, 85, 1240, 85, 1244, 85, 1248, 85, 1253, 85, 1257, 85, 1262, 200, 1266, 200, 1271, 200, 1276, 200, 1280, 200, 1285, 200, 1290, 200, 1294, 200, 1298, 200, 1301, 200, 1305, 65, 1309, 65, 1313, 65, 1316, 65, 1320, 65, 1323, 65, 1326, 65, 1330, 85, 1333, 85, 1337, 65, 1340, 65, 1344, 65, 1347, 65, 1351, 65, 1355, 65, 1359, 65, 1362, 65, 1366, 65, 1370, 65, 1374, 65, 1378, 65, 1381, 65, 1385, 65, 1389, 65, 1393, 65, 1397, 85};
		for (int i = 0; i < raceData.length-1; i+=2) {
			if(raceData[i+1] == 65)
			{
				((XYPlot) chart.getPlot()).addAnnotation(new XYShapeAnnotation(new Rectangle2D.Double(raceData[i]-2, 50, 4, 1),new BasicStroke(3.0f),Color.YELLOW));
			}
			if(raceData[i+1] == 85)
			{
				((XYPlot) chart.getPlot()).addAnnotation(new XYShapeAnnotation(new Rectangle2D.Double(raceData[i]-2, 100, 4, 1),new BasicStroke(3.0f),Color.GREEN));
			}
			if(raceData[i+1] == 200)
			{
				((XYPlot) chart.getPlot()).addAnnotation(new XYShapeAnnotation(new Rectangle2D.Double(raceData[i]-2, 0, 4, 1),new BasicStroke(3.0f),Color.RED));

			}
		}
		
		// sets thickness for series (using strokes)
		renderer.setSeriesStroke(0, new BasicStroke(2.0f));
		
		renderer.setSeriesShape(0, ShapeUtilities.createDiamond(1));

		// sets paint color for plot outlines
		plot.setOutlinePaint(Color.BLUE);
		plot.setOutlineStroke(new BasicStroke(2.0f));
		
		// sets renderer for lines
		plot.setRenderer(renderer);
		
		// sets plot background
		plot.setBackgroundPaint(Color.DARK_GRAY);
		
		// sets paint color for the grid lines
		plot.setRangeGridlinesVisible(true);
		plot.setRangeGridlinePaint(Color.BLACK);
		
		plot.setDomainGridlinesVisible(true);
		plot.setDomainGridlinePaint(Color.BLACK);
		
		LegendItemCollection chartLegend = new LegendItemCollection();
		Shape shape = new Rectangle(30, 3);
		chartLegend.add(new LegendItem("GyroZ", null, null, null, shape, Color.CYAN));
		chartLegend.add(new LegendItem("Break", null, null, null, shape, Color.RED));
		chartLegend.add(new LegendItem("Motor 50%", null, null, null, shape, Color.YELLOW));
		chartLegend.add(new LegendItem("Motor 100%", null, null, null, shape, Color.GREEN));
		plot.setFixedLegendItems(chartLegend);
	}
}